apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'Testing key'
            keyPassword 'Vicomtech1'
            storeFile file('/home/VICOMTECH/uelordi/proyectos/SwitchTrackingEngine/kanvas_tracker/kt/apps/androidApp/keystores/TestingKeyStore.jks')
            storePassword 'Vicomtech1'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "org.opencv.samples.mobilenet"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -frtti -fexceptions"
                arguments "-DOpenCV_DIR=" + getOpenCVDir().toString() + "/sdk/native/jni",
                        "-DANDROID_ARM_NEON=TRUE"


            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
//            signingConfig = $("signingConfigs.signRelease")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            externalNativeBuild {
                cmake {
                    // cmake Debug build type uses -O0, which makes the code slow.
                    arguments "-DCMAKE_BUILD_TYPE=Release"
                }
            }
            signingConfig signingConfigs.config
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ["/home/VICOMTECH/uelordi/SDK/OpenCV-android-sdk3.3/sdk/native/libs"]
//            jniLibs.srcDirs += getOpenCVDir().toString()+"/sdk/native/libs"
        }
    }
}

def getOpenCVDir() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    def externalModuleDir = properties.getProperty('opencv.dir', null)
    if (externalModuleDir == null) {
        throw new GradleException(
                "OpenCV location not found. Define location with opencv.dir in the local.properties file!")
    }
    return externalModuleDir
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //    compile project(':openCVLibrary330')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.github.uelordi01:Opencv-Android-3.3-gradle:1.1'
}
